@model DoAnFramework.Models.Order
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "../Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/store/cart.css" />

    <div class="cart">
        <div class="cart-header">
            <h2>Giỏ hàng</h2>
            <a asp-controller="Book" asp-action="Index">
                <span class="material-symbols-outlined"> keyboard_backspace </span>Tiếp tục mua sắm 
            </a>
        </div>
        <!-- CART-HEADER: End -->
        <!-- CART-BODY: Start -->
         <span id="temp-user-id" style="display: none;">@if(Model != null) @Model.UserId</span>
                   
        <div class="cart-body">
            <!-- PRODUCT-LIST: Start -->
            <table class="product-list--cart">
                <thead>
                    <!-- header -->
                    <tr class="product-list--header">
                        <th><p>Tên sản phẩm</p></th>
                        <th><p>Giá</p></th>
                        <th><p>SL</p></th>
                        <th><p>Tổng tiền</p></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="product-list--body">
                    
                    @if (Model != null && Model.OrderDetails != null)
                    {
                        foreach (var item in Model.OrderDetails)
                        {
                            <tr class="product" id="product-@item.OrderDetailId">
                                <!-- infor -->
                                <td class="product-infor">
                                    @if (item.Book.BookImage.FrontCover != null)
                                    {
                                        var base64 = Convert.ToBase64String(item.Book.BookImage.FrontCover);
                                        var imgUrl = String.Format("data:image/png;base64,{0}", base64);
                                        <img class="product-img" src="@imgUrl" />
                                    }
                                    <div class="product-descr">
                                        <a href="#">@item.BookName</a>
                                        @* <small class="gray-text">@item.Book.Author</small> *@
                                    </div>
                                </td>

                                <!-- price -->
                                <td id="book-price-@item.OrderDetailId">@item.Book.Price.Value.ToString("#,##0")</td>

                                <!-- amount -->
                                <td>
                                    <div class="flex">
                                        <button class="amount-btn pointer minus" id="btn-minus-@item.OrderDetailId">-</button>

                                        <input class="amount-feld"
                                            type="number" 
                                            min="1" 
                                            value="@item.Quantity"
                                            id="@item.OrderDetailId" />
                                            @* onChange="changeAmountInpt(@item.OrderDetailId, @item.Price)"> *@

                                        <button class="amount-btn pointer plus" id="btn-plus-@item.OrderDetailId">+</button>
                                    </div>
                                </td>

                                <!-- total -->
                                <td class="product-total" id="pro-total-@item.OrderDetailId">
                                    @item.Price.Value.ToString("#,##0")
                                </td>

                                <!-- remove from cart -->
                                <td>
                                    <button class="remove-btn pointer"
                                        id="btn-remove-@item.OrderDetailId"
                                        type="button">
                                        <span class="material-symbols-outlined"> delete </span>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>


            </table>
            <!-- PRODUCT-LIST: End -->
            <!-- SUBMIT-SECTION: Start -->
            <div class="submit-section flex">
                <!-- sub total: Start -->
                <div class="sub-total flex">
                    <p>Tạm tính</p>
                    <p class="sub-total--amount">@if(Model != null) @Model.TotalPrice.Value.ToString("#,##0") đ</p>
                </div>
                <!-- sub total: End -->
                <!-- total: Start -->
                <div class="total flex">
                    <p>Tổng tiền</p>
                    <p class="total-amount">@if(Model != null) @Model.TotalPrice.Value.ToString("#,##0") đ</p>
                </div>
                <!-- total: End -->
                <!-- checkout btn: Start -->
                <a class="btn checkout-bnt pointer" asp-controller="Checkout" asp-action="Index">Tiến hành thanh toán</a>
                <!-- checkout btn: End -->
            </div>
            <!-- SUBMIT-SECTION: End -->
        </div>
        <!-- CART-BODY: End -->
    </div>

    <div class="empty-cart hidden">
        <img src="https://www.fudcoshop.com/pub/static/frontend/MageBig/martfury_layout04/en_GB/images/empty-cart.svg"
             class="empty-cart--img" />
        <p class="empty-cart--notification">
            Không có sản phẩm nào trong giỏ hàng
        </p>
        <a asp-controller="Book" asp-action="Index" class="btn empty-cart--shopping">TIẾP TỤC MUA SẮM</a>
    </div>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
 <script>
    const cart = JSON.parse(localStorage.getItem("myCart"));
    const localCart = getLocalCart(cart);

    // Render cart row: start
    $(document).ready(function () {
        var user_id = $('#temp-user-id').text();
        if (user_id == "")
            displayCart(user_id);



        // CHANGE PRODUCT'S AMOUNT-BTN: START
        function changeAmountBtn(btnType, id) {
            // var id = $(btn).attr("id").slice(4);
            var value = Number($(`#${id}`).val()) + btnType;
            if (value >= 1 || btnType != -1) {
                // const input = $(`#${id}`);
                $(`#${id}`).val(value).trigger("change");
            }
        }
        // minus
        $(".product-list--body").on("click", ".minus", function () {
            var id = $(this).attr("id").slice(10);
            changeAmountBtn(-1, id);
        });
        // plus
        $(".product-list--body").on("click", ".plus", function () {
            var id = $(this).attr("id").slice(9);
           changeAmountBtn(1, id);
        });
        // CHANGE PRODUCT'S AMOUNT-BTN: END

        // CHANGE PRODUCT AMOUNT: START
        $(".amount-feld").on("change", function () {
            var inputId = $(this).attr("id");
            var quantity = $(this).val();
            var price = $(`#book-price-${inputId}`).text(); // Change 'pro-price' to the actual id of your price column
            
            var numericValue = parseInt(price.replace(/,/g, ''), 10);
            var total = Number(quantity) * Number(numericValue);
            $(`#pro-total-${inputId}`).text(total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")) // Assuming you want two decimal places, adjust as needed
           
            var totalPrice = 0;

            // Loop through each row in the table body
            $('.product-list--body tr').each(function () {
                // Get the price from the "Tổng tiền" column in the current row
                var priceText = $(this).find('.product-total').text();

                // Remove commas and convert to a number
                var price = parseInt(priceText.replace(/,/g, ''), 10);

                // Add the price to the total
                totalPrice += price;
            });

            $(".sub-total--amount").text(totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ");
            $(".total-amount").text(totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ");
            
            // update data
            // if (user_id === null) {
            //     const cart = JSON.parse(localStorage.getItem("myCart"));
            //     changeAmountLocal(getLocalCart(cart), Number(inputVal), inputId);
            // } else {
            //     changeAmountLogin(inputId, inputVal);
            // }
        });

        // delete product
        $(".remove-btn").on("click", function () {
            var buttonId = $(this).attr('id');
            var id = buttonId.replace('btn-remove-', '');

            const confirmResult = confirm("Xác nhận xóa sản phẩm?");
            if (confirmResult === true) {
                // giam tong don hang
                var subTotal = $(".sub-total--amount").text();
                var old_price = parseInt(subTotal.replace(/,/g, ''), 10);
                var deletedProduct = $(`#pro-total-${id}`).text();
                var delete_price = parseInt(deletedProduct.replace(/,/g, ''), 10);

                var totalPrice = Number(old_price) - Number(delete_price);

                $(".sub-total--amount").text(totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ");
                $(".total-amount").text(totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ");

                // giam so luong san pham trong gio tren giao dien
                var rowCount = $('.product-list--body tr').length;
                rowCount--;

                $(`#product-${id}`).remove();
                //$(`#product-${id}`).addClass("hidden");
                if (rowCount === 0 || typeof rowCount === "undefined") {
                    emptyCart();
                }

                // if (user_id) {
                //     removeProductLogin(id);
                // } else {
                //     removeProductLocal(id);
                // }
            }
        });

        function emptyCart() {
            document.querySelector(".empty-cart").classList.toggle("hidden");
            document.querySelector(".cart-body").classList.toggle("hidden");
        }
        
        function changeAmountLocal(cartData, productAmount, rowId) {
            cartData[rowId].QUANTITY = productAmount;

            var cartArray = [];
            cartData.forEach((row) => {
                let rowData = {};
                rowData.productName = row.PRODUCT_NAME;
                rowData.productPrice = `${row.PRICE} VND`;
                rowData.numberOfProduct = `${row.QUANTITY}`;
                //co doi FIRST_PICTURE THANH FRONT_COVER Khong
                rowData.productImage = `data:FIRST_PICTURE/png;base64,${row.FIRST_PICTURE}`;
                cartArray.push(rowData);
            });
            localStorage.setItem("myCart", JSON.stringify(cartArray));
        }

        // function changeAmountLogin(inputId, inputVal) {
        //     $.ajax({
        //         type: "GET",
        //         url: "cartChangeAmount.php",
        //         data: { inputId: inputId, inputVal: inputVal },
        //         success: function () {
        //             // console.log(response);
        //         },
        //     });
        // }
       
        // CHANGE PRODUCT AMOUNT: END



        // REMOVE PRODUCT: START
        function removeProductLocal(id) {
            const updatedCart = JSON.parse(localStorage.getItem("myCart"));
            updatedCart.splice(id, 1);
            localStorage.setItem("myCart", JSON.stringify(updatedCart));
        }

        // function removeProductLogin(id) {
        //     $.ajax({
        //         type: "GET",
        //         url: "cartRemoveProduct.php",
        //         data: { id: id },
        //         success: function (response) {
        //             console.log(response);
        //         },
        //         error: function () {
        //             console.log("error");
        //         },
        //     });
        // }
        // REMOVE PRODUCT: END





        // LAY GIO HANG LUU O CLIENT NEU KHONG DANG NHAP: START
         function getLocalCart(cart) {
            if (cart === null) {
                    return [];
            }
            // get cart form client
            var mergedCart = [];
            // LAY DATA NEU NGUOI DUNG KHONG DANG NHAP: START
            // DINH DANG JSON CHO GIO HANG && GOP SAN PHAM TRUNG
            // kiem tra xem gio hang da co san pham chua
            function isInclude(arrayObj, value) {
                for (let i = 0; i < arrayObj.length; i++) {
                    if (
                        arrayObj[i].PRODUCT_NAME == value.PRODUCT_NAME &&
                        arrayObj[i].SIZE == value.SIZE
                    ) {
                        return i;
                    }
                }
                return false;
            }

            // dinh dang san pham
            cart.forEach((product, i) => {
                // chuyen thanh object
                var row = {
                    ORDER_DETAIL_ID: i,
                    PRODUCT_NAME: product.productName,
                    PRICE: Number(product.productPrice.slice(0, -4).replaceAll(".", "")),
                    QUANTITY: Number(product.numberOfProduct),
                    FIRST_PICTURE: product.productImage.slice(30),
                };

                // dua vao day san pham (cart)
                var varIsInclude = isInclude(mergedCart, row);
                if (varIsInclude === false) {
                    mergedCart.push(row);
                } else {
                    mergedCart[varIsInclude].QUANTITY += row.QUANTITY;
                }
            });
            // LAY DATA NEU NHUOI DUNG KHONG DANG NHAP: END
            return mergedCart;
        }
        // LAY GIO HANG LUU O CLIENT NEU KHONG DANG NHAP: END
        

        //DISPLAY CART IF USER NOT LOGIN: START
        function displayCart(user_id) {
            var total = 0;

            var data =
                user_id !== null ? (getLoginCart(user_id)).data : getLocalCart(cart);

            // kt xem gio hang co trong khong
            if (data.length === 0) {
                emptyCart();
                return 0;
            }

            const tbCart = $(".product-list--body");
            data.forEach(function (row) {
                getRowAmount(data.length);

                var imageUrl = "data:image/png;base64," + row.FIRST_PICTURE;
                tbCart.append(`
                      <tr
                        class="product"
                        id="product-${row.ORDER_DETAIL_ID}">
                      <!-- infor -->
                      <td class="product-infor">
                        <img
                          src="${imageUrl}"
                          class="product-img"
                          alt="${row.PRODUCT_NAME}" />
                        <div class="product-descr">
                          <a href="#">${row.PRODUCT_NAME}</a>
                        </div>
                      </td>

                      <!-- price -->
                      <td class="price">${row.PRICE * 1}</td>

                      <!-- amount -->
                      <td class="product-amount">
                        <div class="flex amount">
                          <button
                          class="amount-btn pointer minus"
                          id="btn-minus-${row.ORDER_DETAIL_ID}">
                          -</button>
                          <input
                            class="amount-feld"
                            type="number"
                            min="1"
                            value="${row.QUANTITY}"
                            id="${row.ORDER_DETAIL_ID}"
                            onChange="changeAmountInpt(${row.ORDER_DETAIL_ID}, ${row.PRICE})">
                          <button
                          class="amount-btn pointer plus"
                          id="btn-plus-${row.ORDER_DETAIL_ID}">
                          +</button>
                        </div>
                      </td>

                      <!-- total -->
                      <td
                        id="pro-total-${row.ORDER_DETAIL_ID}"
                        class="product-total">
                        ${row.PRICE * row.QUANTITY}
                      </td>

                      <!-- remove from cart -->
                      <td>
                        <button
                          class="remove-btn pointer"
                          id="btn-remove-${row.ORDER_DETAIL_ID}"
                          onClick="removeProduct(${row.ORDER_DETAIL_ID})"
                          type="button">
                          <span class="material-symbols-sharp">
                delete
                </span>
                        </button>
                      </td>
                    </tr>`);
                total += row.QUANTITY * row.PRICE;
            });

            // display sub-total
            document.querySelector(".sub-total--amount").textContent = total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ";

            // display total
            document.querySelector(".total-amount").textContent = total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " đ";
        }
        //DISPLAY CART IF USER NOT LOGIN: END



    });
 </script>